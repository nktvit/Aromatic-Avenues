import{M as d}from"./bootstrap.esm-yGNsrkS6.js";import"./main-Ry5KERbV.js";document.addEventListener("DOMContentLoaded",function(){o(),l()});function s(t){return(JSON.parse(localStorage.getItem("products"))||[]).find(n=>n.id===parseInt(t))}function o(){const t=JSON.parse(localStorage.getItem("cart"))||[],e=document.getElementById("cartItems");e.innerHTML="";let n=0;t.forEach(a=>{const c=s(a.productId);if(!c)return;const r=c.price*a.quantity;n+=r,e.appendChild(u(a,c,r))}),i(n)}function u(t,e,n){const a=document.createElement("div");return a.className="cart-item row align-items-center my-2",a.innerHTML=`
        <div class="col-md-4">${e.name}</div>
        <div class="col-md-3 d-flex align-items-center">
          <button class="btn btn-outline-secondary btn-decrease" type="button" data-product-id="${t.productId}">-</button>
          <input type="text" class="form-control quantity-input text-center mx-2" value="${t.quantity}" style="max-width: 60px;">
          <button class="btn btn-outline-secondary btn-increase" type="button" data-product-id="${t.productId}">+</button>
        </div>
        <div class="col-md-3 text-center"><span id="totalPrice${t.productId}">${n.toFixed(2)} €</span></div>
        <div class="col-md-2 text-end">
          <button class="btn btn-danger remove-item" data-product-id="${t.productId}">Remove</button>
        </div>
    `,a}function i(t){const e=document.getElementById("cartTotal");e&&(e.textContent=`Total: ${t.toFixed(2)} €`)}function l(){document.getElementById("cartItems").addEventListener("click",m),document.getElementById("checkoutButton").addEventListener("click",f),document.getElementById("checkoutForm").addEventListener("submit",y)}function m(t){t.target.matches(".btn-decrease, .btn-increase")?p(t):t.target.matches(".remove-item")&&g(t)}function p(t){const e=t.target,n=e.dataset.productId,a=e.parentNode.querySelector(".quantity-input");let c=parseInt(a.value);c=e.classList.contains("btn-increase")?c+1:c-1,a.value=Math.max(1,c),I(n,c)}function I(t,e){const n=JSON.parse(localStorage.getItem("cart"))||[],a=n.findIndex(c=>c.productId.toString()===t);a>-1&&(n[a].quantity=e,localStorage.setItem("cart",JSON.stringify(n)),o())}function g(t){const e=t.target.dataset.productId,a=(JSON.parse(localStorage.getItem("cart"))||[]).filter(c=>c.productId!==e);localStorage.setItem("cart",JSON.stringify(a)),o()}function f(){if((JSON.parse(localStorage.getItem("cart"))||[]).length===0){alert("Your cart is empty.");return}new d(document.getElementById("checkoutModal")).show()}function y(t){t.preventDefault();const e=/^[0-9]{16}$/,n=document.getElementById("cardNumber").value;e.test(n)?(localStorage.setItem("cart",JSON.stringify([])),d.getInstance(document.getElementById("checkoutModal")).hide(),o(),alert("Order placed successfully!"),window.location.href="index.html"):alert("Invalid card number. Please enter a valid debit card number.")}
